{"version":3,"sources":["cmps/Camera/lion.png","assets/glb/RobotExpressive.glb","cmps/Camera/Camera.jsx","assets/imgs/default.png","App.js","reportWebVitals.js","index.js"],"names":["Camera","useState","url","setUrl","video","document","getElementsByClassName","console","log","navigator","getUserMedia","stream","srcObject","err","error","make_base","canvas","querySelector","base_image","getContext","Image","lion","src","onload","toDataURL","className","type","onChange","event","selectedFile","target","files","reader","FileReader","getElementById","title","name","result","readAsDataURL","onFileSelected","height","width","muted","autoPlay","gorilla","auto-rotate","camera-controls","alt","onClick","style","display","drawImage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gSAAe,MAA0B,iCCA1B,G,MAAA,IAA0B,6C,OCIlC,SAASA,IAAU,IAAD,EAECC,mBAAS,MAFV,mBAEdC,EAFc,KAETC,EAFS,KAKjBC,EAAQC,SAASC,uBAAuB,kBAAkB,GAE1DC,QAAQC,IAAI,SACZC,UAAUC,aACN,CACIN,OAAO,IAEX,SAACO,GACOP,IACAA,EAAMQ,UAAYD,MAG1B,SAACE,GAAD,OAASN,QAAQO,MAAMD,MAS/B,IAqBME,EAAY,WACd,IAAIC,EAASX,SAASY,cAAc,WAEhCC,GADUF,EAAOG,WAAW,MACf,IAAIC,OACrBb,QAAQC,IAAIa,GACZH,EAAWI,IAAMD,EACjBH,EAAWK,OAAS,WAEhBpB,EAAOa,EAAOQ,eAqBtB,OACI,sBAAKC,UAAU,YAAf,UACI,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAlBd,SAACA,GACpBrB,QAAQC,IAAI,SACZ,IAAIqB,EAAeD,EAAME,OAAOC,MAAM,GAClCC,EAAS,IAAIC,WAEJ5B,SAAS6B,eAAe,WAC9BC,MAAQN,EAAaO,KAE5BJ,EAAOT,OAAS,SAAUK,GACtBzB,EAAOyB,EAAME,OAAOO,SAIxBL,EAAOM,cAAcT,GAKqBU,CAAeX,MACrD,sBAAKH,UAAU,SAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,uBACIe,OAhFT,IAiFSC,MAhFV,IAiFUC,OAAK,EACLC,UAAQ,EACRlB,UAAU,mBAEd,qBAAKA,UAAU,OAAf,SACI,8BAAcH,IAAKsB,EAASC,eAAA,EAAYC,mBAAA,SAI/C5C,GAAO,sBAAKuB,UAAU,aAAf,UACJ,qBAAKH,IAAKpB,EAAK6C,IAAI,KACnB,qBAAKtB,UAAU,OAAf,SACI,8BAAcH,IAAKsB,EAASC,eAAA,EAAYC,mBAAA,YAKpD,qBAAKrB,UAAU,aAAf,SACI,wBAAQuB,QAjEJ,WAChB,IAAIhC,EAASX,SAASY,cAAc,WACpCD,EAAOiC,MAAMC,QAAU,OACTlC,EAAOG,WAAW,MACxBgC,UAAU/C,EAAO,EAAG,EAAG,IAAK,KAEpCW,KA2DY,8BAEJ,wBAAQU,UAAU,SAASe,OAtGxB,IAsGwCC,MArGzC,Y,eCRH,I,iBCcAW,MAVf,WACE,OACE,qBAAK3B,UAAU,MAAf,SACE,cAAC,EAAD,OCKS4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3D,SAAS6B,eAAe,SAM1BmB,M","file":"static/js/main.621b4937.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lion.ede3f093.png\";","export default __webpack_public_path__ + \"static/media/RobotExpressive.06f9d5cf.glb\";","import React, { useEffect, useState } from 'react';\nimport lion from '../Camera/lion.png'\nimport './Camera.scss'\nimport gorilla from '../../assets/glb/RobotExpressive.glb'\nexport function Camera() {\n\n    const [url, setUrl] = useState(null);\n    const HEIGHT = 500\n    const WIDTH = 500\n    var video = document.getElementsByClassName('app__videoFeed')[0];\n    const startVideo = () => {\n        console.log('start');\n        navigator.getUserMedia(\n            {\n                video: true,\n            },\n            (stream) => {\n                if (video) {\n                    video.srcObject = stream;\n                }\n            },\n            (err) => console.error(err)\n        );\n    }\n\n\n    startVideo()\n    // useEffect(() => {\n    // })\n\n    const handleChange = ({ target }) => {\n        const file = target.files[0]\n        if (file) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", function () {\n                console.log(this);\n                setUrl(this.result)\n            })\n            reader.readerAsDataURL(file);\n        }\n    }\n\n    const takePicture = () => {\n        var canvas = document.querySelector('.canvas')\n        canvas.style.display = 'none'\n        var context = canvas.getContext('2d')\n        context.drawImage(video, 0, 0, 500, 500)\n        // context.drawImage(lion, 0, 0, 100, 100)\n        make_base();\n    }\n\n    const make_base = () => {\n        var canvas = document.querySelector('.canvas')\n        var context = canvas.getContext('2d')\n        var base_image = new Image();\n        console.log(lion);\n        base_image.src = lion;\n        base_image.onload = () => {\n            // context.drawImage(base_image, 0, 0, 100, 100);\n            setUrl(canvas.toDataURL())\n        }\n\n    }\n\n    const onFileSelected = (event) => {\n        console.log('check');\n        var selectedFile = event.target.files[0];\n        var reader = new FileReader();\n\n        var imgtag = document.getElementById(\"myimage\");\n        imgtag.title = selectedFile.name;\n\n        reader.onload = function (event) {\n            setUrl(event.target.result)\n            // imgtag.src = event.target.result;\n        };\n\n        reader.readAsDataURL(selectedFile);\n    }\n\n    return (\n        <div className=\"container\">\n            <input type=\"file\" onChange={(event)=>onFileSelected(event)} />\n            <div className=\"camera\">\n                <div className=\"camera-container\">\n                    <div className=\"app__container\">\n                        <video\n                            height={HEIGHT}\n                            width={WIDTH}\n                            muted\n                            autoPlay\n                            className=\"app__videoFeed\"\n                        ></video>\n                        <div className=\"demo\">\n                            <model-viewer src={gorilla} auto-rotate camera-controls>\n                            </model-viewer>\n                        </div>\n                    </div>\n                    {url && <div className=\"screenshot\">\n                        <img src={url} alt=\"\" />\n                        <div className=\"demo\">\n                            <model-viewer src={gorilla} auto-rotate camera-controls>\n                            </model-viewer>\n                        </div>\n                    </div>}\n                </div>\n                <div className=\"app__input\">\n                    <button onClick={takePicture}>Take a picture</button>\n                </div>\n                <canvas className=\"canvas\" height={HEIGHT} width={WIDTH} ></canvas>\n            </div>\n        </div>\n    );\n}\n\n","export default __webpack_public_path__ + \"static/media/default.d62198fc.png\";","import './App.css';\nimport { Camera } from './cmps/Camera/Camera'\nimport { WebcamCapture } from './cmps/WebcamCapture/WebcamCapture'\nimport {ReactCam} from './cmps/ReactCam/ReactCam'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Camera />\n      {/* <WebcamCapture /> */}\n      {/* <ReactCam /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}