{"version":3,"sources":["cmps/Camera/lion.png","assets/glb/RobotExpressive.glb","cmps/WebcamCapture/WebcamCapture.jsx","App.js","reportWebVitals.js","index.js"],"names":["videoConstraints","width","height","facingMode","exact","WebcamCapture","webcamRef","React","useRef","useState","url","setUrl","capture","useCallback","a","imageSrc","current","getScreenshot","audio","ref","screenshotFormat","onClick","src","alt","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAAe,I,MCAA,I,iDCMTA,G,MAAmB,CACrBC,MAAO,KACPC,OAAQ,IACRC,WAAY,CAAEC,MAAO,iBAIlB,SAASC,IACZ,IAAMC,EAAYC,IAAMC,OAAO,MADH,EAENC,mBAAS,MAFH,mBAErBC,EAFqB,KAEhBC,EAFgB,KAItBC,EAAUL,IAAMM,YAAN,sBACZ,4BAAAC,EAAA,6DACUC,EAAWT,EAAUU,QAAQC,gBADvC,SAEUN,EAAOI,GAFjB,2CAIA,CAACT,IAGL,OACI,qCACI,cAAC,IAAD,CACIY,OAAO,EACPhB,OAAQ,IACRiB,IAAKb,EACLc,iBAAiB,aACjBnB,MAAO,IACPD,iBAAkBA,IAEtB,wBAAQqB,QAAST,EAAjB,2BACA,qBAAKU,IAAKZ,EAAKa,IAAI,Q,WCtBhBC,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SAEE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7d2086d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lion.ede3f093.png\";","export default __webpack_public_path__ + \"static/media/RobotExpressive.06f9d5cf.glb\";","\nimport React, { Component, useState } from 'react'\nimport Webcam from \"react-webcam\";\n\nimport './WebcamCapture.scss'\n\nconst videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: { exact: \"environment\" }\n    // facingMode: \"user\"\n};\n\nexport function WebcamCapture() {\n    const webcamRef = React.useRef(null);\n    const [url, setUrl] = useState(null);\n\n    const capture = React.useCallback(\n        async() => {\n            const imageSrc = webcamRef.current.getScreenshot();\n            await setUrl(imageSrc)\n        },\n        [webcamRef]\n    );\n\n    return (\n        <>\n            <Webcam\n                audio={false}\n                height={500}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                width={500}\n                videoConstraints={videoConstraints}\n            />\n            <button onClick={capture}>Capture photo</button>\n            <img src={url} alt=\"\"/>\n        </>\n    );\n};\n","import './App.css';\nimport { Camera } from './cmps/Camera/Camera'\nimport { WebcamCapture } from './cmps/WebcamCapture/WebcamCapture'\nimport {ReactCam} from './cmps/ReactCam/ReactCam'\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Camera /> */}\n      <WebcamCapture />\n      {/* <ReactCam /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}