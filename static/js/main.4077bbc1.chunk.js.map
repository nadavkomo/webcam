{"version":3,"sources":["cmps/Camera/lion.png","assets/glb/RobotExpressive.glb","assets/imgs/default.png","cmps/WebcamCapture/WebcamCapture.jsx","App.js","reportWebVitals.js","index.js"],"names":["WebcamCapture","webcamRef","React","useRef","useState","defaultImg","url","setUrl","width","height","facingMode","videoConstraints","setVideoConstraints","capture","useCallback","a","imageSrc","current","getScreenshot","className","onClick","exact","audio","ref","screenshotFormat","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAAe,I,MCAA,I,iDCAA,MAA0B,oC,MCOlC,SAASA,IACZ,IAMMC,EAAYC,IAAMC,OAAO,MAPH,EAQNC,mBAASC,GARH,mBAQrBC,EARqB,KAQhBC,EARgB,OASoBH,mBARlB,CAC1BI,MAAO,KACPC,OAAQ,IAERC,WAAY,SALY,mBASrBC,EATqB,KASHC,EATG,KAiBtBC,EAAUX,IAAMY,YAAN,sBACZ,4BAAAC,EAAA,6DACUC,EAAWf,EAAUgB,QAAQC,gBADvC,SAEUX,EAAOS,GAFjB,2CAIA,CAACf,IAGL,OACI,sBAAKkB,UAAU,iBAAf,UACI,sBAAKA,UAAU,OAAf,UACI,wBAAQC,QAASP,EAAjB,2BACA,wBAAQO,QAnBC,WACmB,SAAhCT,EAAiBD,WACjBE,EAAoB,CAAED,mBAAkBD,WAAY,CAAEW,MAAO,iBAE7DT,EAAoB,CAAED,mBAAkBD,WAAY,UAehD,8BAEJ,sBAAKS,UAAU,YAAf,UACI,qBAAKA,UAAU,SAAf,SACI,cAAC,IAAD,CACIG,OAAO,EACPb,OAAO,OACPD,MAAM,OACNe,IAAKtB,EACLuB,iBAAiB,aACjBb,iBAAkBA,MAG1B,qBAAKQ,UAAU,cAAcM,IAAKnB,EAAKoB,IAAI,W,WCnC5CC,MAVf,WACE,OACE,qBAAKR,UAAU,MAAf,SAEE,cAAC,EAAD,OCISS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4077bbc1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lion.ede3f093.png\";","export default __webpack_public_path__ + \"static/media/RobotExpressive.06f9d5cf.glb\";","export default __webpack_public_path__ + \"static/media/default.d62198fc.png\";","\nimport React, { Component, useState } from 'react'\nimport Webcam from \"react-webcam\";\nimport defaultImg from '../../assets/imgs/default.png'\nimport './WebcamCapture.scss'\n\n\nexport function WebcamCapture() {\n    var videoConstraintsDefault = {\n        width: 1280,\n        height: 720,\n        // facingMode: { exact: \"environment\" }\n        facingMode: \"user\"\n    };\n    const webcamRef = React.useRef(null);\n    const [url, setUrl] = useState(defaultImg);\n    const [videoConstraints, setVideoConstraints] = useState(videoConstraintsDefault)\n    const changeCamera = () => {\n        if (videoConstraints.facingMode === \"user\") {\n            setVideoConstraints({ videoConstraints, facingMode: { exact: \"environment\" } })\n        } else {\n            setVideoConstraints({ videoConstraints, facingMode: \"user\" })\n        }\n    }\n    const capture = React.useCallback(\n        async () => {\n            const imageSrc = webcamRef.current.getScreenshot();\n            await setUrl(imageSrc)\n        },\n        [webcamRef]\n    );\n\n    return (\n        <div className=\"webcam-capture\">\n            <div className=\"btns\">\n                <button onClick={capture}>Capture photo</button>\n                <button onClick={changeCamera}>Change Camera</button>\n            </div>\n            <div className=\"container\">\n                <div className=\"camera\">\n                    <Webcam\n                        audio={false}\n                        height=\"100%\"\n                        width=\"100%\"\n                        ref={webcamRef}\n                        screenshotFormat=\"image/jpeg\"\n                        videoConstraints={videoConstraints}\n                    />\n                </div>\n                <img className=\"screen-shot\" src={url} alt=\"\" />\n            </div>\n        </div>\n    );\n};\n","import './App.css';\nimport { Camera } from './cmps/Camera/Camera'\nimport { WebcamCapture } from './cmps/WebcamCapture/WebcamCapture'\nimport {ReactCam} from './cmps/ReactCam/ReactCam'\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Camera /> */}\n      <WebcamCapture />\n      {/* <ReactCam /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}